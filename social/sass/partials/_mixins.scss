/* ===================================================================

mixin style

=================================================================== */

@mixin rem($size,$base:10) {
	font-size: $size + px;
	font-size: ($size / $base) + rem;
}

@mixin placeholder($color,$size){
	&::placeholder {
		color: $color;
		@include rem($size);
		@extend %font1;
	}
}

@mixin retina{
	@media (-webkit-min-device-pixel-ratio: 2),(min-resolution: 2dppx) {
		@content;
	}
}

@mixin query($size){
	@media all and (max-width: $size + px) {
		@content;
	}
}

@mixin grid($name) {
	@for $n from 1 to $gridColumns + 1 {
		.col_#{$name}_#{$n} {
			@include columns($n);
		}
		.col_#{$name}_offset_#{$n} {
			@include offset($n);
		}
	}
	.col_#{$name}_one_thirds {
		@include columns($gridColumns / 3);
	}
	.col_#{$name}_two_thirds {
		@include columns($gridColumns / 3 * 2);
	}
	.col_#{$name}_one_thirds_offset {
		@include offset($gridColumns /3 );
	}
	.col_#{$name}_two_thirds_offset {
		@include offset($gridColumns / 3 * 2);
	}
}

@mixin use-grid {
	.row {
		@include grid("xs");
		@if $size-s != 0 {
			// Mobile small
			@media (min-width: $size-s) {
				@include grid("s");
			}
		}
		@if $size-md != 0 {
			// Mobile middle
			@media (min-width: $size-md) {
				@include grid("md");
			}
		}
		@if $size-l != 0 {
			// Mobile large
			@media (min-width: $size-l) {
				@include grid("l");
			}
		}
		@if $size-xl != 0 {
			// Mobile xtra large
			@media (min-width: $size-xl) {
				@include grid("xl");
			}
		}
		.right {
			float: right;
		}
	}
}